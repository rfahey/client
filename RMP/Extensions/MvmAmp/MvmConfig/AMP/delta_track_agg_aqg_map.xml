<procs>

  <proc name="incorporate_new_aqg_row">
    <initialize priority ="1000000000">
      <print>'JONAH!!!!!!!!!!!!!! I AM INCORPORATING!'</print>

     
      
      <if>
        <condition>GLOBAL.running_nrt_amp eq '1'</condition>
        <then>
          <print>'JONAH!!!!!!!!!!!!!! I AM INCORPORATED!'</print>
          <define_data_routing>
            <table_name>'AGG_AQG_MAP'</table_name>
            <!--<persistent_tracking>1</persistent_tracking>-->
            <routing_procedure>'determine_node_for_id_acc'</routing_procedure>
            <integration_procedure>'incorporate_new_aqg_row'</integration_procedure>
            <operation_type_field>'operation_type'</operation_type_field>
          </define_data_routing>
        </then>
      </if>
    </initialize>
    <print>'Incorporating object  into aqg_map ['~dump_object(OBJECT.object_id)~']'</print>
    
    <if>
      <condition>object_delta_get_original(OBJECT.object_id,'id_acc') ne OBJECT.id_acc or object_delta_get_original(OBJECT.object_id,'account_qualification_group') ne OBJECT.account_qualification_group or object_delta_get_original(OBJECT.object_id,'child_id_acc') ne OBJECT.child_id_acc</condition>
      <then>
        <if>
          <condition>OBJECT.id_acc ne ''</condition>
          <then>
            <c>If the new row isn't identical to the old row, add the acc to the boundary group of the AQG</c>
            <call_proc_for_current_object>
              <name>'bg_add_acc_to_aqg'</name>
              <param name='child_id_acc'>OBJECT.child_id_acc</param>
              <param name='id_acc'>OBJECT.id_acc</param>
              <param name='account_qualification_group'>OBJECT.account_qualification_group</param>
              <param name='boundary_group_id'>TEMP.boundary_group_id</param>
            </call_proc_for_current_object>
          </then>
        </if>
        <if>
          <condition>object_delta_get_original(OBJECT.object_id,'id_acc') ne ''</condition>
          <then>
            <c>If this is an updated row not a new row, remove the existing relationship</c>
            <call_proc_for_current_object>
              <name>'bg_remove_acc_from_aqg'</name>
              <param name='child_id_acc'>object_delta_get_original(OBJECT.object_id,'child_id_acc')</param>
              <param name='id_acc'>object_delta_get_original(OBJECT.object_id,'id_acc')</param>
              <param name='account_qualification_group'>object_delta_get_original(OBJECT.object_id,'account_qualification_group')</param>
              <param name='boundary_group_id'>TEMP.boundary_group_id</param>
            </call_proc_for_current_object>
          </then>
        </if>
        <call_proc_for_current_object>
          <name>'bg_unlock_boundary_groups'</name>
          <param name='got_unlock'>TEMP.is_unlocked</param>
        </call_proc_for_current_object>
      </then>
    </if>
  </proc>
  
</procs>

