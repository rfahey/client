<queryfile>
   <mtsysconfigdata>
      <effective_date ptype="DATETIME">1998-12-1T00:00:00Z</effective_date>
      <timeout ptype="INTEGER">30</timeout>
      <configfiletype>CONFIG_DATA</configfiletype>
   </mtsysconfigdata>
   <mtconfigdata>
      <filename>Queries_Oracle.xml</filename>

    <query>
        <query_tag>__CREATE_SEQ_ACCOUNT_TYPE__</query_tag>
            <query_string><![CDATA[
create sequence seq_t_account_type increment by 1 start with 1 nocache order nocycle
            ]]></query_string>
            <num_params>0</num_params>
    </query>

    <query>
      <query_tag>__CREATE_T_ACCOUNT_TYPE__</query_tag>
      <query_string><![CDATA[
create table t_account_type
(
  id_type number(10) not null,
  name varchar2(200) NOT NULL,
  b_CanSubscribe char(1) NOT NULL,
  b_CanBePayer char(1) NOT NULL,
  b_CanHaveSyntheticRoot char(1) NOT NULL,
  b_CanParticipateInGSub char(1) NOT NULL,
  b_IsVisibleInHierarchy char(1) NOT NULL,
  b_CanHaveTemplates char(1) NOT NULL,
  b_IsCorporate char(1) NOT NULL,
  nm_description varchar2(512),
  constraint pk_t_account_type PRIMARY KEY(id_type),
	constraint uk_t_account_type_name UNIQUE (name)
)
			]]></query_string>
      <num_params>0</num_params>
    </query>

    <query>
      <query_tag>__CREATE_T_ACCOUNT_TYPE_SERVICEDEF_MAP__</query_tag>
      <query_string>
      <![CDATA[
CREATE TABLE t_account_type_servicedef_map
(
  id_type number(10) NOT NULL,
  operation number(10) NOT NULL,
	id_service_def number(10) NOT NULL,
	CONSTRAINT pk_account_type_servicedef_map PRIMARY KEY (id_type, operation) 
) 
      ]]></query_string>
      <num_params>0</num_params>
    </query>


    <query>
      <query_tag>__CREATE_T_ACCOUNT_TYPE_VIEW_MAP__</query_tag>
      <query_string><![CDATA[
CREATE TABLE t_account_type_view_map
(
  id_type number(10) NOT NULL,
  id_account_view number(10) NOT NULL,
  CONSTRAINT pk_t_account_view_map PRIMARY KEY (id_type, id_account_view)
)
			]]></query_string>
      <num_params>0</num_params>
    </query>


    <query>
      <query_tag>__CREATE_T_ACCOUNT_TYPE_DESCENDENT_TYPE_MAP__</query_tag>
      <query_string><![CDATA[
CREATE TABLE t_acctype_descendenttype_map
(
 id_type number(10) not null,
 id_descendent_type number(10) not null,
 CONSTRAINT pk_acctype_destype_map PRIMARY KEY (id_type, id_descendent_type) 
)
			]]></query_string>
      <num_params>0</num_params>
    </query>

    <query>
      <query_tag>__CREATE_T_PO_ACCOUNT_TYPE_MAP__</query_tag>
      <query_string><![CDATA[
create table t_po_account_type_map
(
  id_po number(10) NOT NULL,
  id_account_type number(10) NOT NULL,
  CONSTRAINT pk_t_po_account_type_map PRIMARY KEY (id_po, id_account_type)
)
			]]></query_string>
      <num_params>0</num_params>
    </query>
    
    <query>
      <query_tag>__CREATE_UPSERT_ACCOUNTTYPE__</query_tag>
      <query_string><![CDATA[
create or replace procedure upsertaccounttype (
	p_name nvarchar2, 
	p_b_cansubscribe varchar2, 
	p_b_canbepayer varchar2,
	p_b_canhavesyntheticroot varchar2, 
	p_b_canparticipateingsub varchar2, 
	p_bisvisibleinhierarchy varchar2,
	p_b_canhavetemplates varchar2, 
	p_b_iscorporate varchar2,
	p_nm_desc nvarchar2, 
	p_id_accounttype out number
)
AS PRAGMA AUTONOMOUS_TRANSACTION;
begin
	
	update t_account_type set 
		b_cansubscribe = p_b_cansubscribe,
		b_canbepayer = p_b_canbepayer,
		b_canhavesyntheticroot = p_b_canhavesyntheticroot,
		b_CanParticipateInGSub = p_b_CanParticipateInGSub,
		b_IsVisibleInHierarchy = p_bIsVisibleInHierarchy,
		b_CanHaveTemplates = p_b_CanHaveTemplates,
		b_IsCorporate = p_b_IsCorporate,
		nm_description = p_nm_desc
	where name = p_name;
	
	if (sql%rowcount = 0) then

		select seq_t_account_type.nextval into p_id_accounttype from dual;

		insert into t_account_type (id_type, name, b_CanSubscribe, b_CanBePayer, 
				b_CanHaveSyntheticRoot, b_CanParticipateInGSub, b_IsVisibleInHierarchy,
				b_CanHaveTemplates, b_IsCorporate, nm_description)
		values (p_id_accounttype, p_name, p_b_cansubscribe, p_b_canbepayer, 
				p_b_canhavesyntheticroot, p_b_CanParticipateInGSub,
				p_bIsVisibleInHierarchy, p_b_CanHaveTemplates, p_b_IsCorporate, p_nm_desc);
	else

		select id_type into p_id_accounttype from t_account_type where upper(name) = upper(p_name);

	end if;
COMMIT;
end;
			]]></query_string>
      <num_params>0</num_params>
    </query>

    <query>
      <query_tag>__CREATE_UPSERT_ACCOUNTTYPE_SDMAP__</query_tag>
      <query_string><![CDATA[
create or replace procedure upsertaccounttypeservicedefmap (
	p_accounttype number, 
	p_operation nvarchar2, 
	p_servicedefname nvarchar2
)
as
	serviceid number;
	opid number;
begin

	InsertEnumData(p_operation, opid);
	InsertEnumData(p_servicedefname, serviceid);

	update t_account_type_servicedef_map set 
		id_service_def = serviceid
		where id_type = p_accounttype
		  and operation = opid;
		
	if (SQL%ROWCOUNT = 0) then

		insert into t_account_type_servicedef_map 
			(id_type, operation, id_service_def) 
		values 
			(p_accounttype, opid, serviceid);

	end if;
	
end;
			]]></query_string>
      <num_params>0</num_params>
    </query>

    <query>
      <query_tag>__CREATE_FUNCTION_GETALLDESCTYPES__</query_tag>
      <query_string><![CDATA[
				/* move this to Oracle Functions  */
			]]></query_string>
      <num_params>0</num_params>
    </query>

   </mtconfigdata>
</queryfile>